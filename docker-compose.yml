version: '3.7'

services:

  db:
    image: 'postgres:12.2-alpine'
    hostname: "${POSTGRES_HOSTNAME}"
    restart: unless-stopped
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    command: postgres -c config_file=/etc/postgresql.conf -c hba_file=/etc/pg_hba.conf
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./local_dev/pg_hba.conf:/etc/pg_hba.conf
      - ./local_dev/postgresql.conf:/etc/postgresql.conf
    networks:
      - headstart

  redis:
    image: 'redis:6.0-alpine'
    restart: unless-stopped
    hostname: "${REDIS_HOST}"
    environment:
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
    command: ["redis-server", "/etc/redis/redis.conf", "--bind", "${REDIS_HOST}", "--port", "${REDIS_PORT}"]
    volumes:
        - 'redis:/var/lib/redis/data'
        - ./local_dev/redis.conf:/etc/redis/redis.conf
    ports:
     - "127.0.0.1:${REDIS_PORT}:6379"
    networks:
      - headstart

  api:
    build:
      context: server
      dockerfile: workers/api/Dockerfile
    restart: unless-stopped
    environment:
      SERVICE_VERSION: "${SERVICE_VERSION}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      REDIS_DB: "${REDIS_DB}"
      BEHIND_PROXY: "${BEHIND_PROXY}"
      DEFAULT_DATABASE: "${DEFAULT_DATABASE}"
      FLASK_ENV: "${FLASK_ENV}"
    command: ["python", "app.py"]
    volumes:
      - ./api_cache:/var/api_cache
      - ./server/workers/api/src:/api
    depends_on:
      - redis
      - base
      - pubmed
      - openaire
    networks:
      - headstart

  persistence:
    build:
      context: server
      dockerfile: workers/persistence/Dockerfile
    restart: unless-stopped
    environment:
      SERVICE_VERSION: "${SERVICE_VERSION}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOSTS: "${POSTGRES_HOSTS}"
      POSTGRES_PORTS: "${POSTGRES_PORTS}"
      BEHIND_PROXY: "${BEHIND_PROXY}"
      DEFAULT_DATABASE: "${DEFAULT_DATABASE}"
      FLASK_ENV: "${FLASK_ENV}"
      SSH_AUTH_SOCK: "/run/host-services/ssh-auth.sock"
    command: ["python", "app.py"]
    volumes:
      - ./server/workers/persistence/src:/api
    networks:
      - headstart

  dataprocessing:
    build:
      context: server
      dockerfile: workers/dataprocessing/Dockerfile
    environment:
      SERVICE_VERSION: "${SERVICE_VERSION}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_DB: "${REDIS_DB}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      LOGLEVEL: "${LOGLEVEL}"
      LOGFILE: "${LOGFILE}"
      RENV_VERSION: 0.14.0-5
      CRAN_REPOS: https://cran.wu.ac.at
      LC_ALL: "en_US.UTF-8"
      LANG: "en_US.UTF-8"
      RENV_PATHS_CACHE: /renv/cache
      PYTHONIOENCODING: "utf-8"
    restart: unless-stopped
    volumes:
      - ./local_dev/renv/cache:/renv/cache
      - /var/log/headstart:/var/log/headstart
      - ./server/preprocessing/other-scripts:/headstart/other-scripts
    depends_on:
      - redis
    networks:
      - headstart

  base:
    build:
      context: server
      dockerfile: workers/base/Dockerfile
    environment:
      SERVICE_VERSION: "${SERVICE_VERSION}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_DB: "${REDIS_DB}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      LOGLEVEL: "${LOGLEVEL}"
      LOGFILE: "/var/log/headstart/headstart.log"
      RENV_VERSION: 0.14.0-5
      CRAN_REPOS: https://cran.wu.ac.at
      LC_ALL: "en_US.UTF-8"
      LANG: "en_US.UTF-8"
      RENV_PATHS_CACHE: /renv/cache
      PYTHONIOENCODING: "utf-8"
      R_BASE_APIKEY: "${R_BASE_APIKEY}"
    restart: unless-stopped
    volumes:
      - ./local_dev/renv/cache:/renv/cache
      - /var/log/headstart:/var/log/headstart
      - ./server/preprocessing/other-scripts:/headstart/other-scripts
    depends_on:
      - redis
    networks:
      - headstart

  pubmed:
    build:
      context: server
      dockerfile: workers/pubmed/Dockerfile
    environment:
      SERVICE_VERSION: "${SERVICE_VERSION}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_DB: "${REDIS_DB}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      LOGLEVEL: "${LOGLEVEL}"
      LOGFILE: "${LOGFILE}"
      RENV_VERSION: 0.14.0-5
      CRAN_REPOS: https://cran.wu.ac.at
      LC_ALL: "en_US.UTF-8"
      LANG: "en_US.UTF-8"
      RENV_PATHS_CACHE: /renv/cache
      PYTHONIOENCODING: "utf-8"
    restart: unless-stopped
    volumes:
      - ./local_dev/renv/cache:/renv/cache
      - /var/log/headstart:/var/log/headstart
      - ./server/preprocessing/other-scripts:/headstart/other-scripts
    depends_on:
      - redis
    networks:
      - headstart

  openaire:
    build:
      context: server
      dockerfile: workers/openaire/Dockerfile
    environment:
      SERVICE_VERSION: "${SERVICE_VERSION}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_DB: "${REDIS_DB}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      LOGLEVEL: "${LOGLEVEL}"
      LOGFILE: "${LOGFILE}"
      RENV_VERSION: 0.14.0-5
      CRAN_REPOS: https://cran.wu.ac.at
      LC_ALL: "en_US.UTF-8"
      LANG: "en_US.UTF-8"
      RENV_PATHS_CACHE: /renv/cache
      PYTHONIOENCODING: "utf-8"
    restart: unless-stopped
    volumes:
      - ./local_dev/renv/cache:/renv/cache
      - /var/log/headstart:/var/log/headstart
      - ./server/preprocessing/other-scripts:/headstart/other-scripts
    depends_on:
      - redis
    networks:
      - headstart

  searchflow:
    build: local_dev/searchflow-container
    volumes:
      - ../project-website:/var/www/html
      - ./local_dev/config_local_projectwebsite.php:/var/www/html/config_local.php
      - ../search-flow/:/var/www/html/search-flow
      - ./local_dev/config_local_searchflow.ini:/var/www/html/search-flow/config_local.ini
      - ../Headstart:/var/www/html/headstart
      - ./local_dev/config_local_headstart.ini:/var/www/html/headstart/server/preprocessing/conf/config_local.ini
      - ./local_dev/entrypoint.php:/var/www/html/entrypoint.php
    ports:
      - 127.0.0.1:8085:80
    networks:
      - headstart


volumes:
  redis:
  db_data:
    driver: local
  api_cache:
    driver: local

networks:
  headstart:
