version: '3.7'

services:

  db:
    image: 'postgres:12.2-alpine'
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    command: postgres -c config_file=/etc/postgresql.conf -c hba_file=/etc/pg_hba.conf
    volumes:
      - ~/data/OKMaps/postgresql/data:/var/lib/postgresql/data
      - ./server/workers/pg_hba.conf:/etc/pg_hba.conf
      - ./server/workers/postgresql.conf:/etc/postgresql.conf
    expose:
      - "${POSTGRES_PORT}"
    networks: 
      - headstart

  pgadmin:
    image: 'dpage/pgadmin4'
    ports:
      - '127.0.0.1:54323:80'
    networks:
      - headstart

  redis:
    image: 'redis:4.0-alpine'
    restart: always
    hostname: "${REDIS_HOST}"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    environment:
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
    command: ["redis-server", "/etc/redis/redis.conf", "--bind", "${REDIS_HOST}", "--appendonly", "yes", "--port", "${REDIS_PORT}"]
    volumes:
        - 'redis:/var/lib/redis/data'
        - ./server/workers/redis.conf:/etc/redis/redis.conf
    restart: always
    networks: 
      - headstart

  api:
    build:
      context: server
      dockerfile: workers/api/Dockerfile
    restart: always
    environment:
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
    command: ["gunicorn",  "--workers", "10", "--threads", "2", "-b", "127.0.0.1:${API_PORT}", "app:app", "--timeout", "300"]
    ports:
    - '5001:5001'
    depends_on:
      - redis
    networks: 
      - headstart

  search_triple:
    build:
      context: server
      dockerfile: workers/triple/Dockerfile
    env_file:
      - server/workers/triple/triple.env
    environment:
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_DB: "${REDIS_DB}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    restart: always
    depends_on:
      - redis
    networks: 
      - headstart

  search_gsheets:
    build:
      context: server
      dockerfile: workers/gsheets/Dockerfile
    env_file:
      - server/workers/gsheets/gsheets.env
    environment:
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_DB: "${REDIS_DB}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    restart: always
    depends_on:
      - redis
    networks: 
      - headstart

  dataprocessing:
    build:
      context: server
      dockerfile: workers/dataprocessing/Dockerfile
    env_file:
    - server/workers/dataprocessing/dataprocessing.env
    environment:
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_DB: "${REDIS_DB}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    restart: always
    volumes:
      - /opt/local/renv/cache:/renv/cache
      - /var/log/headstart:/var/log/headstart
    depends_on:
      - redis
    networks: 
      - headstart

  search_base:
    build:
      context: server
      dockerfile: workers/base/Dockerfile
    env_file:
      - server/workers/base/base.env
    environment:
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_DB: "${REDIS_DB}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    restart: always
    volumes:
      - /opt/local/renv/cache:/renv/cache
      - /var/log/headstart:/var/log/headstart
    depends_on:
      - redis
    networks:
      - headstart

  search_pubmed:
    build:
      context: server
      dockerfile: workers/pubmed/Dockerfile
    env_file:
      - server/workers/pubmed/pubmed.env
    environment:
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_DB: "${REDIS_DB}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    restart: always
    volumes:
      - /opt/local/renv/cache:/renv/cache
      - /var/log/headstart:/var/log/headstart
    depends_on:
      - redis
    networks:
      - headstart

  search_openaire:
    build:
      context: server
      dockerfile: workers/openaire/Dockerfile
    env_file:
      - server/workers/openaire/openaire.env
    environment:
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_DB: "${REDIS_DB}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    restart: always
    volumes:
      - /opt/local/renv/cache:/renv/cache
      - /var/log/headstart:/var/log/headstart
    depends_on:
      - redis
    networks:
      - headstart

volumes:
  redis:
  db-data:
    driver: local

networks:
  headstart: